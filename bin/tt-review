#!/bin/bash

# Function to display usage
usage() {
    echo "Usage: $0 [options] [base_branch]"
    echo "  base_branch: Branch to compare against (default: auto-detected main/master)"
    echo ""
    echo "Options:"
    echo "  -h, --help    Show this help message"
    echo "  --full        Run all 5 review types (default: bugs + quality only)"
    echo "  --dry-run     Show what would be executed without running"
    echo ""
    echo "Default mode runs:"
    echo "  - tt-review-bugs (critical issues)"
    echo "  - tt-review-quality (code quality)"
    echo ""
    echo "Full mode (--full) additionally runs:"
    echo "  - tt-review-complexity (simplification opportunities)"
    echo "  - tt-review-security (vulnerability detection)"
    echo "  - tt-review-leyline (philosophy alignment - full codebase)"
    echo ""
    echo "Individual review commands:"
    echo "  tt-review-bugs       - Critical bugs and correctness"
    echo "  tt-review-quality    - General code quality"
    echo "  tt-review-complexity - Simplification opportunities"
    echo "  tt-review-security   - Security vulnerabilities"
    echo "  tt-review-leyline    - Full codebase philosophy check"
    echo "  tt-review-synthesis  - Combine multiple review outputs"
    exit 1
}

# Parse arguments
FULL_MODE=false
DRY_RUN=false
BASE_BRANCH=""

while [[ $# -gt 0 ]]; do
    case $1 in
        -h|--help)
            usage
            ;;
        --full)
            FULL_MODE=true
            shift
            ;;
        --dry-run)
            DRY_RUN=true
            shift
            ;;
        *)
            BASE_BRANCH="$1"
            shift
            ;;
    esac
done

echo ""
echo "üîç Smart Code Review System"
echo "=========================="

# Determine which reviews to run
if [ "$FULL_MODE" = true ]; then
    echo "Mode: FULL (all 5 review types + synthesis)"
    REVIEWS=("bugs" "quality" "complexity" "security" "leyline")
else
    echo "Mode: STANDARD (bugs + quality)"
    REVIEWS=("bugs" "quality")
fi

if [ "$DRY_RUN" = true ]; then
    echo "DRY RUN - Showing what would be executed:"
    echo ""
    for review in "${REVIEWS[@]}"; do
        echo "Would run: tt-review-$review \"$BASE_BRANCH\""
    done
    if [ ${#REVIEWS[@]} -gt 1 ]; then
        echo "Would run: tt-review-synthesis"
    fi
    exit 0
fi

echo ""

# Track successful reviews
SUCCESSFUL_REVIEWS=()
FAILED_REVIEWS=()

# Run each review
for review in "${REVIEWS[@]}"; do
    echo "‚ñ∂Ô∏è  Running $review review..."
    
    if [ "$review" = "leyline" ]; then
        # Leyline doesn't need base branch (full codebase review)
        if tt-review-"$review"; then
            SUCCESSFUL_REVIEWS+=("$review")
            echo "‚úÖ $review review completed"
        else
            FAILED_REVIEWS+=("$review")
            echo "‚ùå $review review failed"
        fi
    else
        # Other reviews need base branch
        if tt-review-"$review" "$BASE_BRANCH"; then
            SUCCESSFUL_REVIEWS+=("$review")
            echo "‚úÖ $review review completed"
        else
            FAILED_REVIEWS+=("$review")
            echo "‚ùå $review review failed"
        fi
    fi
    echo ""
done

# Run synthesis if we have multiple successful reviews
if [ ${#SUCCESSFUL_REVIEWS[@]} -gt 1 ]; then
    echo "üîÄ Running synthesis on ${#SUCCESSFUL_REVIEWS[@]} review reports..."
    if tt-review-synthesis; then
        echo "‚úÖ Synthesis completed"
        SYNTHESIS_SUCCESS=true
    else
        echo "‚ùå Synthesis failed"
        SYNTHESIS_SUCCESS=false
    fi
    echo ""
fi

# Summary
echo "üìä Review Summary"
echo "================"
echo "Successful: ${#SUCCESSFUL_REVIEWS[@]} reviews"
for review in "${SUCCESSFUL_REVIEWS[@]}"; do
    upper_review=$(echo "$review" | tr '[:lower:]' '[:upper:]')
    echo "  ‚úÖ CODE_REVIEW_${upper_review}.md"
done

if [ ${#FAILED_REVIEWS[@]} -gt 0 ]; then
    echo "Failed: ${#FAILED_REVIEWS[@]} reviews"
    for review in "${FAILED_REVIEWS[@]}"; do
        echo "  ‚ùå $review"
    done
fi

if [ ${#SUCCESSFUL_REVIEWS[@]} -gt 1 ] && [ "$SYNTHESIS_SUCCESS" = true ]; then
    echo ""
    echo "üìã Unified report: CODE_REVIEW_SYNTHESIS.md"
fi

echo ""

# Exit status
if [ ${#FAILED_REVIEWS[@]} -eq 0 ] && { [ ${#SUCCESSFUL_REVIEWS[@]} -le 1 ] || [ "$SYNTHESIS_SUCCESS" = true ]; }; then
    echo "‚úÖ All reviews completed successfully!"
    exit 0
else
    echo "‚ö†Ô∏è  Some reviews failed. Check individual outputs for details."
    exit 1
fi