#!/bin/bash

# Tmux Startup Script for Claude Code workflow
# Creates one session with multiple windows for different projects

SESSION_NAME="dev"
DEVELOPMENT_ROOT="${DEVELOPMENT:-$HOME/Development}"

# ===== CONFIGURATION =====
# Define your active projects here. Format: "relative_path:window_name"
# To add a project: add a new line with "path:name"
# To remove a project: delete or comment out the line
declare -a PROJECTS=(
    "adminifi/web:adminifi-web"
    "adminifi/edugakko-api:adminifi-edugakko-api"
    "adminifi/agentic-prototype:adminifi-agentic-prototype"
    "bitcoin-price-tag:bitcoin-price-tag"
    "bitcoin-price-tag-splash:bitcoin-price-tag-splash"
    "brainrot-publishing-house:brainrot-publishing-house"
    "codex:codex"
    "elevator:elevator"
    "gitpulse:gitpulse"
    "glance:glance"
    "hyperbolic-time-chamber:hyperbolic-time-chamber"
    "leyline:leyline"
    "misty-step/marketing-site:misty-step-marketing-site"
    "scry/scry-api:scry-api"
    "thinktank:thinktank"
    "timeismoney:timeismoney"
    "timeismoney-splash:timeismoney-splash"
    "trump-goggles:trump-goggles"
    "trump-goggles-splash:trump-goggles-splash"
    "vanity:vanity"
)

# Configurable commands for each pane
LEFT_PANE_CMD="claude"
RIGHT_PANE_CMD="eza --long --git --icons --group-directories-first; gs; ts"

# Clean, non-bold LS_COLORS for eza
export_clean_ls_colors() {
    export LS_COLORS='rs=0:di=0;34:ln=0;36:mh=00:pi=0;33:so=0;35:do=0;35:bd=0;33:cd=0;33:or=0;31:mi=0;31:su=0;37:sg=0;30:ca=0;30:tw=0;30:ow=0;34:st=0;37:ex=0;32:*.tar=0;31:*.tgz=0;31:*.arc=0;31:*.arj=0;31:*.taz=0;31:*.lha=0;31:*.lz4=0;31:*.lzh=0;31:*.lzma=0;31:*.tlz=0;31:*.txz=0;31:*.tzo=0;31:*.t7z=0;31:*.zip=0;31:*.z=0;31:*.dz=0;31:*.gz=0;31:*.lrz=0;31:*.lz=0;31:*.lzo=0;31:*.xz=0;31:*.zst=0;31:*.tzst=0;31:*.bz2=0;31:*.bz=0;31:*.tbz=0;31:*.tbz2=0;31:*.tz=0;31:*.deb=0;31:*.rpm=0;31:*.jar=0;31:*.war=0;31:*.ear=0;31:*.sar=0;31:*.rar=0;31:*.alz=0;31:*.ace=0;31:*.zoo=0;31:*.cpio=0;31:*.7z=0;31:*.rz=0;31:*.cab=0;31:*.wim=0;31:*.swm=0;31:*.dwm=0;31:*.esd=0;31:*.jpg=0;35:*.jpeg=0;35:*.mjpg=0;35:*.mjpeg=0;35:*.gif=0;35:*.bmp=0;35:*.pbm=0;35:*.pgm=0;35:*.ppm=0;35:*.tga=0;35:*.xbm=0;35:*.xpm=0;35:*.tif=0;35:*.tiff=0;35:*.png=0;35:*.svg=0;35:*.svgz=0;35:*.mng=0;35:*.pcx=0;35:*.mov=0;35:*.mpg=0;35:*.mpeg=0;35:*.m2v=0;35:*.mkv=0;35:*.webm=0;35:*.webp=0;35:*.ogm=0;35:*.mp4=0;35:*.m4v=0;35:*.mp4v=0;35:*.vob=0;35:*.qt=0;35:*.nuv=0;35:*.wmv=0;35:*.asf=0;35:*.rm=0;35:*.rmvb=0;35:*.flc=0;35:*.avi=0;35:*.fli=0;35:*.flv=0;35:*.gl=0;35:*.dl=0;35:*.xcf=0;35:*.xwd=0;35:*.yuv=0;35:*.cgm=0;35:*.emf=0;35:*.ogv=0;35:*.ogx=0;35:*.aac=0;36:*.au=0;36:*.flac=0;36:*.m4a=0;36:*.mid=0;36:*.midi=0;36:*.mka=0;36:*.mp3=0;36:*.mpc=0;36:*.ogg=0;36:*.ra=0;36:*.wav=0;36:*.oga=0;36:*.opus=0;36:*.spx=0;36:*.xspf=0;36:'
}

# ===== FUNCTIONS =====
create_window() {
    local project_path="$1"
    local window_name="$2"
    local window_index="$3"
    local full_path="$DEVELOPMENT_ROOT/$project_path"
    
    # Check if project directory exists
    if [[ ! -d "$full_path" ]]; then
        echo "⚠️  Warning: Project directory '$full_path' does not exist, skipping..."
        return 1
    fi
    
    echo "📁 Creating window: $window_name"
    
    if [[ $window_index -eq 1 ]]; then
        # First window - create session
        tmux new-session -d -s "$SESSION_NAME" -c "$full_path" -n "$window_name"
    else
        # Subsequent windows
        tmux new-window -t "$SESSION_NAME" -c "$full_path" -n "$window_name"
    fi
    
    # Create vertical split and run commands
    tmux split-window -h -t "$SESSION_NAME:$window_name" -c "$full_path"
    tmux send-keys -t "$SESSION_NAME:$window_name.0" 'export LS_COLORS="rs=0:di=0;34:ln=0;36:mh=00:pi=0;33:so=0;35:do=0;35:bd=0;33:cd=0;33:or=0;31:mi=0;31:su=0;37:sg=0;30:ca=0;30:tw=0;30:ow=0;34:st=0;37:ex=0;32"' C-m
    tmux send-keys -t "$SESSION_NAME:$window_name.0" "$LEFT_PANE_CMD" C-m
    tmux send-keys -t "$SESSION_NAME:$window_name.1" "$RIGHT_PANE_CMD" C-m
    
    return 0
}

# ===== MAIN SCRIPT =====
# Check if session already exists
if tmux has-session -t "$SESSION_NAME" 2>/dev/null; then
    echo "🔄 Session '$SESSION_NAME' already exists. Attaching..."
    tmux attach-session -t "$SESSION_NAME"
    exit 0
fi

echo "🚀 Creating tmux session for development work..."
echo "📂 Development root: $DEVELOPMENT_ROOT"
echo "🎯 Active projects: ${#PROJECTS[@]}"
echo

window_count=0
created_windows=0

# Create windows for each project
for project in "${PROJECTS[@]}"; do
    # Parse project string (path:name)
    IFS=':' read -r project_path window_name <<< "$project"
    
    ((window_count++))
    
    if create_window "$project_path" "$window_name" "$window_count"; then
        ((created_windows++))
    fi
done

echo

# Verify at least one window was created
if [[ $created_windows -eq 0 ]]; then
    echo "❌ Error: No valid project directories found. Please check your PROJECTS configuration."
    exit 1
fi

# Verify session was created successfully
if ! tmux has-session -t "$SESSION_NAME" 2>/dev/null; then
    echo "❌ Error: Failed to create tmux session '$SESSION_NAME'"
    exit 1
fi

# Select first window and attach
tmux select-window -t "$SESSION_NAME:1"

echo "✅ Created $created_windows windows successfully"
echo "🔗 Attaching to session: $SESSION_NAME"
tmux attach-session -t "$SESSION_NAME"
