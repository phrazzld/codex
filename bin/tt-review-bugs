#!/bin/bash
# tt-review-bugs - Critical bug and correctness review using shared library

# Source the shared library
source "$(dirname "$0")/tt-common.sh"

tt_main() {
    # Configure this script
    tt_set_config \
        --template-name "review-bugs" \
        --output-file "CODE_REVIEW_BUGS.md" \
        --description "Performs critical bug and correctness review"

    # Use the shared function for git diff setup
    tt_setup_diff_review "$@"

    # Set the template content
    tt_set_template << 'EOF'
# Critical Bug and Correctness Review

Identify **critical bugs, crashes, security vulnerabilities, and correctness issues** in changed code only.

**CRITICAL**: Review ONLY changed lines (+ lines in diff). Focus on issues that will cause runtime failures, data corruption, or security breaches.

## Priority Focus Areas
1. **Crashes/Exceptions**: Null pointers, undefined behavior, uncaught exceptions
2. **Data Corruption**: Race conditions, incorrect state mutations, data loss
3. **Security Vulnerabilities**: SQL injection, XSS, auth bypass, exposed secrets
4. **Logic Errors**: Off-by-one, incorrect conditionals, infinite loops
5. **Resource Issues**: Memory leaks, file handle leaks, deadlocks

## Out of Scope  
- Style issues or code smell (unless they cause bugs)
- Performance (unless it causes timeouts/failures)
- Pre-existing unchanged code
- Documentation or comments
- Test coverage

## Output Format
```
# Critical Bug Review

## 🚨 CRITICAL ISSUES (MUST FIX)
### [Issue] - CRITICAL
- **Location**: file_path:line_numbers
- **Bug Type**: [crash/security/data-loss/logic-error]
- **What Happens**: [specific failure scenario]
- **Impact**: [user-facing consequence]
- **Fix**: [specific code change needed]

## ⚠️ HIGH RISK BUGS
### [Issue] - HIGH
- **Location**: file_path:line_numbers
- **Bug Type**: [category]
- **Risk**: [what could go wrong]
- **Scenario**: [when this fails]
- **Fix**: [recommended solution]

## 🔍 POTENTIAL ISSUES
### [Issue] - MEDIUM
- **Location**: file_path:line_numbers
- **Concern**: [what might fail]
- **Conditions**: [when it could happen]
- **Mitigation**: [how to prevent]

## ✅ SUMMARY
- Critical Issues: X (must fix before merge)
- High Risk Bugs: Y (should fix)
- Potential Issues: Z (consider fixing)

Overall Risk Assessment: [BLOCKED|HIGH-RISK|MODERATE|LOW]
```

Focus on REAL bugs that WILL cause problems, not theoretical issues.
EOF
}

# Main execution
tt_main "$@"
tt_run