#!/bin/bash

# Adminifi Tmux Startup Script
# Creates one session with three windows for the adminifi project suite

SESSION_NAME="adminifi"
DEVELOPMENT_ROOT="${DEVELOPMENT:-$HOME/Development}"

# ===== CONFIGURATION =====
# Adminifi project windows
declare -a PROJECTS=(
    "adminifi/web:adminifi-web"
    "adminifi/edugakko-api:adminifi-edugakko-api"
    "adminifi/agentic-prototype:adminifi-agentic-prototype"
)

# Configurable commands for each pane
LEFT_PANE_CMD="claude"
RIGHT_PANE_CMD="eza --long --git --icons --group-directories-first; gs; ts"

# ===== FUNCTIONS =====
create_window() {
    local project_path="$1"
    local window_name="$2"
    local window_index="$3"
    local full_path="$DEVELOPMENT_ROOT/$project_path"
    
    # Check if project directory exists
    if [[ ! -d "$full_path" ]]; then
        echo "⚠️  Warning: Project directory '$full_path' does not exist, skipping..."
        return 1
    fi
    
    echo "📁 Creating window: $window_name"
    
    if [[ $window_index -eq 1 ]]; then
        # First window - create session
        tmux new-session -d -s "$SESSION_NAME" -c "$full_path" -n "$window_name"
    else
        # Subsequent windows
        tmux new-window -t "$SESSION_NAME" -c "$full_path" -n "$window_name"
    fi
    
    # Create vertical split and run commands
    tmux split-window -h -t "$SESSION_NAME:$window_name" -c "$full_path"
    tmux send-keys -t "$SESSION_NAME:$window_name.0" 'export LS_COLORS="rs=0:di=0;34:ln=0;36:mh=00:pi=0;33:so=0;35:do=0;35:bd=0;33:cd=0;33:or=0;31:mi=0;31:su=0;37:sg=0;30:ca=0;30:tw=0;30:ow=0;34:st=0;37:ex=0;32"' C-m
    tmux send-keys -t "$SESSION_NAME:$window_name.0" "$LEFT_PANE_CMD" C-m
    tmux send-keys -t "$SESSION_NAME:$window_name.1" "$RIGHT_PANE_CMD" C-m
    
    return 0
}

# ===== MAIN SCRIPT =====
# Check if session already exists
if tmux has-session -t "$SESSION_NAME" 2>/dev/null; then
    echo "🔄 Session '$SESSION_NAME' already exists. Attaching..."
    tmux attach-session -t "$SESSION_NAME"
    exit 0
fi

echo "🚀 Creating tmux session for Adminifi development..."
echo "📂 Development root: $DEVELOPMENT_ROOT"
echo "🎯 Adminifi projects: ${#PROJECTS[@]}"
echo

window_count=0
created_windows=0

# Create windows for each project
for project in "${PROJECTS[@]}"; do
    # Parse project string (path:name)
    IFS=':' read -r project_path window_name <<< "$project"
    
    ((window_count++))
    
    if create_window "$project_path" "$window_name" "$window_count"; then
        ((created_windows++))
    fi
done

echo

# Verify at least one window was created
if [[ $created_windows -eq 0 ]]; then
    echo "❌ Error: No valid Adminifi project directories found. Please check your project paths."
    exit 1
fi

# Verify session was created successfully
if ! tmux has-session -t "$SESSION_NAME" 2>/dev/null; then
    echo "❌ Error: Failed to create tmux session '$SESSION_NAME'"
    exit 1
fi

# Select first window and attach
tmux select-window -t "$SESSION_NAME:1"

echo "✅ Created $created_windows Adminifi windows successfully"
echo "🔗 Attaching to session: $SESSION_NAME"
tmux attach-session -t "$SESSION_NAME"