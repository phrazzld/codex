# System Maintenance Configuration
# Safe, cross-platform, user-configurable settings

# User Environment (auto-detected if not specified)
user:
  home_dir: "${HOME}"
  dev_dir: "${HOME}/Development"
  backup_dir: "${HOME}/.system-maintenance/backups"
  log_dir: "${HOME}/.system-maintenance/logs"

# Safety Settings
safety:
  always_backup: true
  max_single_delete_gb: 10  # Require extra confirmation above this
  require_confirmation: true
  dry_run_default: false
  backup_retention_days: 30

# Critical Processes
# Processes that should prevent disruptive operations when running
critical_processes:
  # Database services
  databases:
    - "postgres"
    - "mysqld" 
    - "redis-server"
    - "mongod"
    - "sqlite"
    - "mariadb"
    
  # Development servers and build tools
  development:
    - "npm"
    - "yarn"
    - "pnpm"
    - "node"
    - "webpack"
    - "vite"
    - "cargo"
    - "rustc"
    - "go"
    - "python"
    - "ruby"
    - "php"
    
  # Container and virtualization
  containers:
    - "docker"
    - "dockerd"
    - "containerd"
    - "podman"
    - "docker-compose"
    - "k3s"
    - "kubectl"
    
  # IDE and editors with unsaved work potential
  editors:
    - "code"           # VS Code
    - "cursor"         # Cursor editor
    - "vim"
    - "nvim"
    - "emacs"
    - "sublime_text"
    - "atom"
    - "TextEdit"       # macOS
    
  # Network and file transfer
  network:
    - "ssh"
    - "scp"
    - "rsync"
    - "sftp"
    - "curl"
    - "wget"
    - "git"
    
  # User-defined critical processes (add your own here)
  custom: []

# Cleanup Thresholds (in days)
cleanup:
  downloads_age: 30
  node_modules_stale_age: 90
  cache_retention: 7
  log_retention: 30

# Package Managers
package_managers:
  npm:
    enabled: true
    cache_cmd: "npm cache clean --force"
  yarn:
    enabled: true  
    cache_cmd: "yarn cache clean"
  pnpm:
    enabled: true
    cache_cmd: "pnpm store prune"

# System-specific settings
system:
  reboot:
    enabled: true
    max_uptime_days: 7
    warning_minutes: 5
  memory:
    purge_enabled: true
    swap_threshold_mb: 1024

# Notification Settings
notification_methods:
  default: "desktop"  # desktop, terminal, both
  reboot_prompt: "both"  # Use both desktop and terminal for reboot prompts
  timeout_seconds: 30  # Default timeout for interactive prompts
  fallback_to_terminal: true  # Fallback to terminal if desktop fails

# User Presence Detection
# Detect if user is actively using the system before disruptive operations
user_presence:
  enabled: true  # Enable user presence checking
  
  # Detection methods to use (all are enabled by default)
  methods:
    idle_time: true        # Check system idle time
    active_sessions: true  # Check for active SSH/terminal sessions
    recent_files: true     # Check for recently modified files in dev directories
    running_processes: true # Check for interactive user processes
    
  # Thresholds for presence detection
  thresholds:
    max_idle_minutes: 15      # Consider user away if idle > 15 minutes
    recent_file_minutes: 30   # Files modified in last 30 minutes indicate activity
    process_check_minutes: 5  # Check for processes started in last 5 minutes
    
  # Behavior when user presence is uncertain
  fallback:
    assume_present_on_error: true  # If detection fails, assume user is present (safer)
    prompt_on_uncertainty: true    # Prompt user if presence is unclear

# Cross-platform commands
commands:
  macos:
    memory_purge: "sudo purge"
    notification: "osascript -e 'display dialog \"{message}\" with title \"{title}\"'"
  linux:
    memory_purge: "sudo sync && echo 3 | sudo tee /proc/sys/vm/drop_caches"
    notification: "notify-send \"{title}\" \"{message}\""
  windows:
    memory_purge: "powershell Clear-RecycleBin -Force"
    notification: "powershell Add-Type -AssemblyName System.Windows.Forms; [System.Windows.Forms.MessageBox]::Show('{message}', '{title}')"